{
	"数値複数受け取り": {
		"prefix": "map(int,input().split())",
		"body": "map(int,input().split())"
	},
	"8方向探査": {
		"prefix": "hatihoukou",
		"body": "dy = [1, 0, -1, 0, 1, -1, 1, -1]\ndx = [0, 1, 0, -1, 1, 1, -1, -1]"
	},
	"二次元配列受け取り": {
		"prefix": "[list(map(int,input().split())) for _ in range(N)]",
		"body": "[list(map(int,input().split())) for _ in range(N)]",
	},
	"転置": {
		"prefix": "tenti",
		"body": "l_2d_t = [list(x) for x in zip(*l_2d)]",
	},
	"判定": {
		"prefix": "judge",
		"body": "print('Yes' if judge() else 'No')",
	},

	

	
	// "sample1": {
	// 	"prefix": "yoda",
	// 	"body": "やるか、やらぬかだ。やってみる、などない。"
	// }

	
	// Place your Atcoder ワークスペース snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}
